
Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x00000000ffff0000 !x
rom              0x00000000ffff0000 0x0000000000010000 xr
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000060000                __EH_FRAME = 0x60000
                0x0000000000009000                __STACK_START_16 = 0x9000
                0x0000000000009fff                __STACK_END_16 = 0x9fff
                0x00000000000003ff                __STACK_SIZE_32 = ((__STACK_KERNEL_END_VMA - __STACK_KERNEL_VMA) / 0x4)
                0x0000000000000000                __SYS_TABLES_PHY = 0x0
                0x0000000000010000                __PAGE_TABLES_PHY = 0x10000
                0x0000000000010000                __CR3_KERNEL_PHY = 0x10000
                0x0000000001000000                __CR3_TAREA_1_PHY = 0x1000000
                0x0000000002000000                __CR3_TAREA_2_PHY = 0x2000000
                0x0000000003000000                __CR3_TAREA_3_PHY = 0x3000000
                0x0000000000050000                __CR3_TAREA_4_PHY = 0x50000
                0x0000000000060000                __FUNCTIONS_PHY = 0x60000
                0x00000000000b8000                __VGA_PHY = 0xb8000
                0x0000000000100000                __TECLADO_ISR_PHY = 0x100000
                0x0000000000200000                __DATOS_SYS32_PHY = 0x200000
                0x0000000000210000                __DIGITS_TABLE_PHY = 0x210000
                0x0000000000220000                __KERNEL_32_PHY = 0x220000
                0x0000000000310000                __TAREA1_TEXT_PHY = 0x310000
                0x0000000000320000                __TAREA1_BSS_PHY = 0x320000
                0x0000000000330000                __TAREA1_DATA_PHY = 0x330000
                0x0000000000340000                __TAREA1_RODATA_PHY = 0x340000
                0x0000000000411000                __TAREA2_TEXT_PHY = 0x411000
                0x0000000000420000                __TAREA2_BSS_PHY = 0x420000
                0x0000000000430000                __TAREA2_DATA_PHY = 0x430000
                0x0000000000440000                __TAREA2_RODATA_PHY = 0x440000
                0x0000000000510000                __TAREA3_TEXT_PHY = 0x510000
                0x0000000000520000                __TAREA3_BSS_PHY = 0x520000
                0x0000000000530000                __TAREA3_DATA_PHY = 0x530000
                0x0000000000540000                __TAREA3_RODATA_PHY = 0x540000
                0x0000000000610000                __TAREA4_TEXT_PHY = 0x610000
                0x0000000000620000                __TAREA4_BSS_PHY = 0x620000
                0x0000000000630000                __TAREA4_DATA_PHY = 0x630000
                0x0000000000640000                __TAREA4_RODATA_PHY = 0x640000
                0x000000000a000000                __PAG_DINAMICA_INIT_PHY = 0xa000000
                0x000000001fff8000                __STACK_KERNEL_PHY = 0x1fff8000
                0x000000001fff8fff                __STACK_KERNEL_END_PHY = 0x1fff8fff
                0x00000000000003ff                __STACK_SIZE_KERNEL = ((__STACK_KERNEL_END_PHY - __STACK_KERNEL_PHY) / 0x4)
                0x000000001fff4000                __STACK_KERNEL_TAREA1_PHY = 0x1fff4000
                0x000000001fff4fff                __STACK_KERNEL_TAREA1_END_PHY = 0x1fff4fff
                0x000000001fff5000                __STACK_KERNEL_TAREA2_PHY = 0x1fff5000
                0x000000001fff5fff                __STACK_KERNEL_TAREA2_END_PHY = 0x1fff5fff
                0x000000001fff6000                __STACK_KERNEL_TAREA3_PHY = 0x1fff6000
                0x000000001fff6fff                __STACK_KERNEL_TAREA3_END_PHY = 0x1fff6fff
                0x000000001fff7000                __STACK_KERNEL_TAREA4_PHY = 0x1fff7000
                0x000000001fff7fff                __STACK_KERNEL_TAREA4_END_PHY = 0x1fff7fff
                0x000000001fff0000                __TAREA1_STACK_START_PHY = 0x1fff0000
                0x000000001fff0fff                __TAREA1_STACK_END_PHY = 0x1fff0fff
                0x00000000000003ff                __TAREA1_STACK_SIZE = ((__TAREA1_STACK_END_PHY - __TAREA1_STACK_START_PHY) / 0x4)
                0x000000001fff1000                __TAREA2_STACK_START_PHY = 0x1fff1000
                0x000000001fff1fff                __TAREA2_STACK_END_PHY = 0x1fff1fff
                0x00000000000003ff                __TAREA2_STACK_SIZE = ((__TAREA2_STACK_END_PHY - __TAREA2_STACK_START_PHY) / 0x4)
                0x000000001fff2000                __TAREA3_STACK_START_PHY = 0x1fff2000
                0x000000001fff2fff                __TAREA3_STACK_END_PHY = 0x1fff2fff
                0x00000000000003ff                __TAREA3_STACK_SIZE = ((__TAREA3_STACK_END_PHY - __TAREA3_STACK_START_PHY) / 0x4)
                0x000000001fff3000                __TAREA4_STACK_START_PHY = 0x1fff3000
                0x000000001fff3fff                __TAREA4_STACK_END_PHY = 0x1fff3fff
                0x00000000000003ff                __TAREA4_STACK_SIZE = ((__TAREA4_STACK_END_PHY - __TAREA4_STACK_START_PHY) / 0x4)
                0x0000000000000000                __SYS_TABLES_VMA = 0x0
                0x0000000000010000                __PAGE_TABLES_VMA = 0x10000
                0x0000000000050000                __FUNCTIONS_VMA = 0x50000
                0x0000000000e80000                __VGA_VMA = 0xe80000
                0x0000000000100000                __TECLADO_ISR_VMA = 0x100000
                0x0000000001200000                __DATOS_SYS32_VMA = 0x1200000
                0x0000000001210000                __DIGITS_TABLE_VMA = 0x1210000
                0x0000000001220000                __KERNEL_32_VMA = 0x1220000
                0x0000000001310000                __TAREA1_TEXT_VMA = 0x1310000
                0x0000000001320000                __TAREA1_BSS_VMA = 0x1320000
                0x0000000001330000                __TAREA1_DATA_VMA = 0x1330000
                0x0000000001340000                __TAREA1_RODATA_VMA = 0x1340000
                0x0000000001410000                __TAREA2_TEXT_VMA = 0x1410000
                0x0000000001420000                __TAREA2_BSS_VMA = 0x1420000
                0x0000000001430000                __TAREA2_DATA_VMA = 0x1430000
                0x0000000001440000                __TAREA2_RODATA_VMA = 0x1440000
                0x0000000001510000                __TAREA3_TEXT_VMA = 0x1510000
                0x0000000001520000                __TAREA3_BSS_VMA = 0x1520000
                0x0000000001530000                __TAREA3_DATA_VMA = 0x1530000
                0x0000000001540000                __TAREA3_RODATA_VMA = 0x1540000
                0x0000000001610000                __TAREA4_TEXT_VMA = 0x1610000
                0x0000000001620000                __TAREA4_BSS_VMA = 0x1620000
                0x0000000001630000                __TAREA4_DATA_VMA = 0x1630000
                0x0000000001640000                __TAREA4_RODATA_VMA = 0x1640000
                0x000000000a000000                __PAG_DINAMICA_INIT_VMA = 0xa000000
                0x000000001fff8000                __STACK_KERNEL_VMA = 0x1fff8000
                0x000000001fff8fff                __STACK_KERNEL_END_VMA = 0x1fff8fff
                0x000000001fff4000                __STACK_KERNEL_TAREA1_VMA = 0x1fff4000
                0x000000001fff4fff                __STACK_KERNEL_TAREA1_END_VMA = 0x1fff4fff
                0x000000001fff5000                __STACK_KERNEL_TAREA2_VMA = 0x1fff5000
                0x000000001fff5fff                __STACK_KERNEL_TAREA2_END_VMA = 0x1fff5fff
                0x000000001fff6000                __STACK_KERNEL_TAERA3_VMA = 0x1fff6000
                0x000000001fff6fff                __STACK_KERNEL_TAREA3_END_VMA = 0x1fff6fff
                0x000000001fff7000                __STACK_KERNEL_TAREA4_VMA = 0x1fff7000
                0x000000001fff7fff                __STACK_KERNEL_TAREA4_END_VMA = 0x1fff7fff
                0x000000000078f000                __TAREA1_STACK_START_VMA = 0x78f000
                0x000000000078ffff                __TAREA1_STACK_END_VMA = 0x78ffff
                0x0000000000790000                __TAREA2_STACK_START_VMA = 0x790000
                0x0000000000790fff                __TAREA2_STACK_END_VMA = 0x790fff
                0x0000000000791000                __TAREA3_STACK_START_VMA = 0x791000
                0x0000000000791fff                __TAREA3_STACK_END_VMA = 0x791fff
                0x0000000000792000                __TAREA4_STACK_START_VMA = 0x792000
                0x0000000000792fff                __TAREA4_STACK_END_VMA = 0x792fff
                0x0000000040000000                __TSS_BASICA = 0x40000000
                0x0000000041000000                __TSS1_VMA = 0x41000000
                0x0000000042000000                __TSS2_VMA = 0x42000000
                0x0000000043000000                __TSS3_VMA = 0x43000000
                0x0000000044000000                __TSS4_VMA = 0x44000000
                0x00000000ffff0000                __INIT_ROM_VMA = 0xffff0000
                0x00000000fffffff0                __RESET_VMA = 0xfffffff0
                0x00000000ffff0000                __INIT_ROM_VMA = __INIT_ROM_LMA
                0x00000000ffff9000                __INIT_16_VMA = __INIT_16_LMA
                0x00000000ffff9069                __VGA_INIT_VMA = __VGA_INIT_LMA
                0x00000000ffffa38b                __INIT_32_VMA = __INIT_32_LMA
                0x00000000ffffaf9b                __FUNCTIONS_ROM_VMA = __FUNCTIONS_ROM_LMA
                0x00000000fffffff0                __RESET_VMA = __RESET_LMA
                0x00000000ffff0000                __INIT_ROM_LMA = 0xffff0000
                0x00000000ffff0000                __SYS_TABLES_LMA = __INIT_ROM_LMA
                0x00000000ffff9000                __INIT_16_LMA = 0xffff9000
                0x00000000fffffff0                __RESET_LMA = 0xfffffff0

.sys_tables_32  0x0000000000000000      0x444 load address 0x00000000ffff0000
 *(.sys_tables)
 .sys_tables    0x0000000000000000      0x444 ./bin/sys_tables.elf
                0x0000000000000030                _gdtr_32
                0x000000000000043e                _idtr_32
                0x0000000000000444                __sys_tables_size = SIZEOF (.sys_tables_32)
                0x00000000ffff0444                __FUNCTIONS_LMA = (LOADADDR (.sys_tables_32) + SIZEOF (.sys_tables_32))

.functions      0x0000000000050000      0xeec load address 0x00000000ffff0444
 *(.functions_c)
 .functions_c   0x0000000000050000      0xa2b ./bin/functions.elf
                0x0000000000050000                __fast_memcpy
                0x000000000005003c                limpiar_buffer
                0x0000000000050086                determinar_tecla_presionada
                0x0000000000050147                escribir_buffer
                0x00000000000501b4                escribir_tabla_digitos
                0x00000000000502d3                leer_buffer
                0x000000000005033d                set_cr3
                0x000000000005037a                set_dir_page_table_entry
                0x0000000000050462                set_page_table_entry
                0x0000000000050589                set_page
                0x0000000000050680                escribir_caracter_VGA
                0x000000000005072e                escribir_mensaje_VGA
                0x0000000000050830                convertir_ASCII
                0x000000000005085e                msg_bienvenida_VGA
                0x00000000000508ec                limpiar_VGA
                0x0000000000050959                get_entry_DTP
                0x0000000000050974                get_entry_TP
                0x0000000000050994                mostrar_numero32_VGA
 .functions_c   0x0000000000050a2b      0x1f8 ./bin/scheduler.elf
                0x0000000000050a2b                scheduler_c
                0x0000000000050b4f                determinar_TSS_a_leer
                0x0000000000050bcd                determinar_TSS_a_guardar
 *(.functions_asm)
 .functions_asm
                0x0000000000050c23      0x2c9 ./bin/functions_asm.elf
                0x0000000000050c23                init_tss
                0x0000000000050cd9                leer_contexto_siguiente_asm
                0x0000000000050d7a                guardar_contexto_asm
 ./bin/functions.elf(.note*)
 .note.GNU-stack
                0x0000000000050eec        0x0 ./bin/functions.elf
 ./bin/functions.elf(.bss_functions_ram)
 ./bin/functions.elf(.data_functions_ram)
 ./bin/functions.elf(.rodata_functions_ram)
                0x0000000000000eec                __functions_size = SIZEOF (.functions)
                0x00000000ffff1330                __TECLADO_ISR_LMA = (LOADADDR (.functions) + SIZEOF (.functions))

.handlers_ISR   0x0000000000100000      0x258 load address 0x00000000ffff1330
 *(.teclado_and_ISR)
 .teclado_and_ISR
                0x0000000000100000      0x258 ./bin/handlers_32.elf
                0x0000000000100035                return_guardar_contexto
                0x0000000000100048                return_leer_contexto
                0x0000000100000000                L_IRQ00_Handler
                0x000000010000005d                L_IRQ01_Handler
                0x0000000100000082                L_ISR00_Handler_DE
                0x000000010000008e                L_ISR02_Handler_NMI
                0x0000000100000094                L_ISR03_Handler_BP
                0x000000010000009a                L_ISR04_Handler_OF
                0x00000001000000a0                L_ISR05_Handler_BR
                0x00000001000000a6                L_ISR06_Handler_UD
                0x00000001000000ac                L_ISR07_Handler_NM
                0x00000001000000b2                L_ISR08_Handler_DF
                0x00000001000000b8                L_ISR10_Handler_TS
                0x00000001000000be                L_ISR11_Handler_NP
                0x00000001000000c4                L_ISR12_Handler_SS
                0x00000001000000ca                L_ISR13_Handler_GP
                0x00000001000000d0                L_ISR14_Handler_PF
                0x000000010000023f                L_ISR16_Handler_MF
                0x0000000100000245                L_ISR17_Handler_AC
                0x000000010000024b                L_ISR18_Handler_MC
                0x0000000100000251                L_ISR19_Handler_XM
                0x0000000100000257                L_ISR128_Handler_SC
                0x0000000000000258                __handlers_32_size = SIZEOF (.handlers_ISR)
                0x00000000ffff1588                __DATOS_SYS32_LMA = (LOADADDR (.handlers_ISR) + SIZEOF (.handlers_ISR))

.datos_sys32    0x0000000001200000      0x242 load address 0x00000000ffff1588
 *(.data_kernel)
 .data_kernel   0x0000000001200000       0xff ./bin/main.elf
                0x0000000001200000                memoria_buffer_reservada
                0x0000000001200013                contador_timer
                0x0000000001200014                resultado_promedio
                0x000000000120001c                dir_lineal_page_fault
                0x0000000001200020                error_code_PF
                0x0000000001200024                dir_phy_dinamica
                0x0000000001200028                paginas_creadas
                0x000000000120002c                TSS_aux
                0x0000000001200030                CR3_aux
                0x0000000001200034                Stack_aux
                0x0000000001200064                page_fault_msg
                0x0000000001200079                page_fault_msg_2
                0x0000000001200087                page_fault_msg_3
                0x0000000001200094                page_fault_msg_4
                0x00000000012000c5                page_fault_msg_5
                0x00000000012000d9                page_fault_msg_6
 .data_kernel   0x00000000012000ff        0x1 ./bin/scheduler.elf
                0x00000000012000ff                tarea_RUNNING
 *(.data)
 .data          0x0000000001200100        0x0 ./bin/functions.elf
 .data          0x0000000001200100        0x0 ./bin/tarea_1.elf
 .data          0x0000000001200100        0x0 ./bin/tarea_2.elf
 .data          0x0000000001200100        0x0 ./bin/tarea_3.elf
 .data          0x0000000001200100        0x0 ./bin/tarea_4.elf
 .data          0x0000000001200100        0x0 ./bin/functions_rom.elf
 .data          0x0000000001200100        0x3 ./bin/scheduler.elf
                0x0000000001200100                tarea_READY
                0x0000000001200101                tarea_SUSPENDING
                0x0000000001200102                primer_context_save
 *(.rodata)
 *fill*         0x0000000001200103        0x1 
 .rodata        0x0000000001200104       0xce ./bin/functions.elf
 *fill*         0x00000000012001d2        0x2 
 .rodata        0x00000000012001d4       0x20 ./bin/tarea_1.elf
 *(.bss)
 .bss           0x00000000012001f4       0x1c ./bin/functions.elf
 .bss           0x0000000001200210       0x30 ./bin/tarea_1.elf
 .bss           0x0000000001200240        0x0 ./bin/tarea_2.elf
 .bss           0x0000000001200240        0x0 ./bin/tarea_3.elf
 .bss           0x0000000001200240        0x0 ./bin/tarea_4.elf
 .bss           0x0000000001200240        0x0 ./bin/functions_rom.elf
 .bss           0x0000000001200240        0x2 ./bin/scheduler.elf
                0x0000000001200240                time_frame_100ms
                0x0000000001200241                time_frame_10ms
                0x0000000000000242                __data_size = SIZEOF (.datos_sys32)
                0x00000000ffff17ca                __KERNEL_32_LMA = (LOADADDR (.datos_sys32) + SIZEOF (.datos_sys32))

.codigo_kernel32
                0x0000000001220000       0x2a load address 0x00000000ffff17ca
 *(.kernel32)
 .kernel32      0x0000000001220000       0x2a ./bin/main.elf
                0x0000000001220000                kernel32_init
                0x000000000000002a                __codigo_kernel32_size = SIZEOF (.codigo_kernel32)
                0x00000000ffff17f4                __TAREA1_TEXT_LMA = (LOADADDR (.codigo_kernel32) + SIZEOF (.codigo_kernel32))

.tarea_1_text   0x0000000001310000      0x3e5 load address 0x00000000ffff17f4
 *(.functions_tarea_1)
 .functions_tarea_1
                0x0000000001310000      0x3e5 ./bin/tarea_1.elf
                0x0000000001310000                ejecutar_tarea_1
                0x0000000001310079                lectura_promedio64
                0x00000000013100b1                mostrar_promedio64_VGA
                0x0000000001310178                promedio_digitos_64
                0x000000000131037c                sumatoria_digitos_64
 ./bin/tarea_1.elf(.note*)
 .note.GNU-stack
                0x00000000013103e5        0x0 ./bin/tarea_1.elf
                0x00000000000003e5                __tarea_01_size = SIZEOF (.tarea_1_text)
                0x00000000ffff1bd9                __TAREA1_BSS_LMA = (LOADADDR (.tarea_1_text) + SIZEOF (.tarea_1_text))

.tarea_1_bss    0x0000000001320000        0x1 load address 0x00000000ffff1bd9
 ./bin/tarea_1.elf(.bss_tarea1)
 .bss_tarea1    0x0000000001320000        0x1 ./bin/tarea_1.elf
                0x0000000001320000                var_global_bss_tarea1
                0x0000000000000001                __tarea_1_bss_size = SIZEOF (.tarea_1_bss)
                0x00000000ffff1bda                __TAREA1_DATA_LMA = (LOADADDR (.tarea_1_bss) + SIZEOF (.tarea_1_bss))

.tarea_1_data   0x0000000001330000        0x1 load address 0x00000000ffff1bda
 ./bin/tarea_1.elf(.data_tarea1)
 .data_tarea1   0x0000000001330000        0x1 ./bin/tarea_1.elf
                0x0000000001330000                variable_global_inicializada
                0x0000000000000001                __tarea_1_data_size = SIZEOF (.tarea_1_data)
                0x00000000ffff1bdb                __TAREA1_RODATA_LMA = (LOADADDR (.tarea_1_data) + SIZEOF (.tarea_1_data))

.tarea_1_rodata
                0x0000000001340000        0x1 load address 0x00000000ffff1bdb
 ./bin/tarea_1.elf(.rodata_tarea1)
 .rodata_tarea1
                0x0000000001340000        0x1 ./bin/tarea_1.elf
                0x0000000001340000                var_global_rodata_tarea1
                0x0000000000000001                __tarea_1_rodata_size = SIZEOF (.tarea_1_rodata)
                0x00000000ffff1bdc                __TAREA2_TEXT_LMA = (LOADADDR (.tarea_1_rodata) + SIZEOF (.tarea_1_rodata))

.tarea_2_text   0x0000000001410000        0x6 load address 0x00000000ffff1bdc
 *(.functions_tarea_2)
 .functions_tarea_2
                0x0000000001410000        0x6 ./bin/tarea_2.elf
                0x0000000001410000                ejecutar_tarea_2
 ./bin/tarea_2.elf(.note*)
 .note.GNU-stack
                0x0000000001410006        0x0 ./bin/tarea_2.elf
                0x0000000000000006                __tarea_02_size = SIZEOF (.tarea_2_text)
                0x00000000ffff1be2                __TAREA2_BSS_LMA = (LOADADDR (.tarea_2_text) + SIZEOF (.tarea_2_text))

.tarea_2_bss    0x0000000001420000        0x1 load address 0x00000000ffff1be2
 ./bin/tarea_2.elf(.bss_tarea2)
 .bss_tarea2    0x0000000001420000        0x1 ./bin/tarea_2.elf
                0x0000000001420000                var_global_bss_tarea2
                0x0000000000000001                __tarea_2_bss_size = SIZEOF (.tarea_2_bss)
                0x00000000ffff1be3                __TAREA2_DATA_LMA = (LOADADDR (.tarea_2_bss) + SIZEOF (.tarea_2_bss))

.tarea_2_data   0x0000000001430000        0x1 load address 0x00000000ffff1be3
 ./bin/tarea_2.elf(.data_tarea2)
 .data_tarea2   0x0000000001430000        0x1 ./bin/tarea_2.elf
                0x0000000001430000                variable_global_inicializada_tarea2
                0x0000000000000001                __tarea_2_data_size = SIZEOF (.tarea_2_data)
                0x00000000ffff1be4                __TAREA2_RODATA_LMA = (LOADADDR (.tarea_2_data) + SIZEOF (.tarea_2_data))

.tarea_2_rodata
                0x0000000001440000        0x1 load address 0x00000000ffff1be4
 ./bin/tarea_2.elf(.rodata_tarea2)
 .rodata_tarea2
                0x0000000001440000        0x1 ./bin/tarea_2.elf
                0x0000000001440000                var_global_rodata_tarea2
                0x0000000000000001                __tarea_2_rodata_size = SIZEOF (.tarea_2_rodata)
                0x00000000ffff1be5                __TAREA3_TEXT_LMA = (LOADADDR (.tarea_2_rodata) + SIZEOF (.tarea_2_rodata))

.tarea_3_text   0x0000000001510000        0x6 load address 0x00000000ffff1be5
 *(.functions_tarea_3)
 .functions_tarea_3
                0x0000000001510000        0x6 ./bin/tarea_3.elf
                0x0000000001510000                ejecutar_tarea_3
 ./bin/tarea_3.elf(.note*)
 .note.GNU-stack
                0x0000000001510006        0x0 ./bin/tarea_3.elf
                0x0000000000000006                __tarea_03_size = SIZEOF (.tarea_3_text)
                0x00000000ffff1beb                __TAREA3_BSS_LMA = (LOADADDR (.tarea_3_text) + SIZEOF (.tarea_3_text))

.tarea_3_bss    0x0000000001520000        0x1 load address 0x00000000ffff1beb
 ./bin/tarea_3.elf(.bss_tarea3)
 .bss_tarea3    0x0000000001520000        0x1 ./bin/tarea_3.elf
                0x0000000001520000                var_global_bss_tarea3
                0x0000000000000001                __tarea_3_bss_size = SIZEOF (.tarea_3_bss)
                0x00000000ffff1bec                __TAREA3_DATA_LMA = (LOADADDR (.tarea_3_bss) + SIZEOF (.tarea_3_bss))

.tarea_3_data   0x0000000001530000        0x1 load address 0x00000000ffff1bec
 ./bin/tarea_3.elf(.data_tarea3)
 .data_tarea3   0x0000000001530000        0x1 ./bin/tarea_3.elf
                0x0000000001530000                variable_global_inicializada_tarea3
                0x0000000000000001                __tarea_3_data_size = SIZEOF (.tarea_3_data)
                0x00000000ffff1bed                __TAREA3_RODATA_LMA = (LOADADDR (.tarea_3_data) + SIZEOF (.tarea_3_data))

.tarea_3_rodata
                0x0000000001540000        0x1 load address 0x00000000ffff1bed
 ./bin/tarea_3.elf(.rodata_tarea3)
 .rodata_tarea3
                0x0000000001540000        0x1 ./bin/tarea_3.elf
                0x0000000001540000                var_global_rodata_tarea3
                0x0000000000000001                __tarea_3_rodata_size = SIZEOF (.tarea_3_rodata)
                0x00000000ffff1bee                __TAREA4_TEXT_LMA = (LOADADDR (.tarea_3_rodata) + SIZEOF (.tarea_3_rodata))

.tarea_4_text   0x0000000001610000        0x9 load address 0x00000000ffff1bee
 *(.functions_tarea_4)
 .functions_tarea_4
                0x0000000001610000        0x9 ./bin/tarea_4.elf
                0x0000000001610000                ejecutar_tarea_4
 ./bin/tarea_4.elf(.note*)
 .note.GNU-stack
                0x0000000001610009        0x0 ./bin/tarea_4.elf
                0x0000000000000009                __tarea_04_size = SIZEOF (.tarea_4_text)
                0x00000000ffff1bf7                __TAREA4_BSS_LMA = (LOADADDR (.tarea_4_text) + SIZEOF (.tarea_4_text))

.tarea_4_bss    0x0000000001620000        0x1 load address 0x00000000ffff1bf7
 ./bin/tarea_4.elf(.bss_tarea4)
 .bss_tarea4    0x0000000001620000        0x1 ./bin/tarea_4.elf
                0x0000000001620000                var_global_bss_tarea4
                0x0000000000000001                __tarea_4_bss_size = SIZEOF (.tarea_4_bss)
                0x00000000ffff1bf8                __TAREA4_DATA_LMA = (LOADADDR (.tarea_4_bss) + SIZEOF (.tarea_4_bss))

.tarea_4_data   0x0000000001630000        0x1 load address 0x00000000ffff1bf8
 ./bin/tarea_4.elf(.data_tarea4)
 .data_tarea4   0x0000000001630000        0x1 ./bin/tarea_4.elf
                0x0000000001630000                variable_global_inicializada_tarea4
                0x0000000000000001                __tarea_4_data_size = SIZEOF (.tarea_4_data)
                0x00000000ffff1bf9                __TAREA4_RODATA_LMA = (LOADADDR (.tarea_4_data) + SIZEOF (.tarea_4_data))

.tarea_4_rodata
                0x0000000001640000        0x1 load address 0x00000000ffff1bf9
 ./bin/tarea_4.elf(.rodata_tarea4)
 .rodata_tarea4
                0x0000000001640000        0x1 ./bin/tarea_4.elf
                0x0000000001640000                var_global_rodata_tarea4
                0x0000000000000001                __tarea_4_rodata_size = SIZEOF (.tarea_4_rodata)

.codigo_init16  0x00000000ffff9000       0x69
 *(.ROM_init)
 .ROM_init      0x00000000ffff9000       0x69 ./bin/init16.elf
                0x00000000ffff9000                start16
                0x00000000ffff9031                return_init_screen
                0x00000000ffff9069                __VGA_INIT_LMA = (LOADADDR (.codigo_init16) + SIZEOF (.codigo_init16))

.video_init     0x00000000ffff9069     0x1322
 *(.vga_init)
 .vga_init      0x00000000ffff9069     0x1322 ./bin/init_screen.elf
                0x00000000ffffa165                init_screen
                0x00000000ffffa38b                __INIT_32_LMA = (LOADADDR (.video_init) + SIZEOF (.video_init))

.codigo_init32  0x00000000ffffa38b      0xc10
 *(.start32)
 .start32       0x00000000ffffa38b      0xc10 ./bin/init32.elf
                0x00000000ffffa38b                start32_launcher
                0x00000000ffffaf9b                __FUNCTIONS_ROM_LMA = (LOADADDR (.codigo_init32) + SIZEOF (.codigo_init32))

.functions_rom  0x00000000ffffaf9b      0x20f
 *(.functions_rom)
 .functions_rom
                0x00000000ffffaf9b      0x1ab ./bin/functions_rom.elf
                0x00000000ffffaf9b                __fast_memcpy_rom
                0x00000000ffffafd7                set_cr3_rom
                0x00000000ffffb014                set_page_rom
                0x00000000ffffb10b                get_entry_DTP_rom
                0x00000000ffffb126                get_entry_TP_rom
 *(.functions_asm_rom)
 .functions_asm_rom
                0x00000000ffffb146       0x64 ./bin/functions_asm_rom.elf
                0x00000000ffffb146                init_pic
                0x00000000ffffb173                init_timer
                0x00000000ffffb182                init_teclado
 *(.note.gnu.property)
 ./bin/functions_rom.elf(.note*)
 .note.GNU-stack
                0x00000000ffffb1aa        0x0 ./bin/functions_rom.elf
 ./bin/functions_rom.elf(.data_functions_rom)
 ./bin/functions_rom.elf(.bss_functions_rom)
 ./bin/functions_rom.elf(.rodata_functions_rom)

.text           0x00000000ffffb1aa        0x0
 .text          0x00000000ffffb1aa        0x0 ./bin/functions.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/tarea_1.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/tarea_2.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/tarea_3.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/tarea_4.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/functions_rom.elf
 .text          0x00000000ffffb1aa        0x0 ./bin/scheduler.elf

.codigo_reset   0x00000000fffffff0       0x10
 *(.resetVector)
 .resetVector   0x00000000fffffff0       0x10 ./bin/reset.elf
                0x00000000fffffff0                reset
LOAD ./bin/init32.elf
LOAD ./bin/reset.elf
LOAD ./bin/init16.elf
LOAD ./bin/main.elf
LOAD ./bin/functions_asm.elf
LOAD ./bin/functions_asm_rom.elf
LOAD ./bin/functions_rom.elf
LOAD ./bin/handlers_32.elf
LOAD ./bin/functions.elf
LOAD ./bin/sys_tables.elf
LOAD ./bin/init_screen.elf
LOAD ./bin/tarea_1.elf
LOAD ./bin/tarea_2.elf
LOAD ./bin/tarea_3.elf
LOAD ./bin/tarea_4.elf
LOAD ./bin/scheduler.elf
OUTPUT(bin/mibios.bin binary)

.comment        0x0000000000000000      0x126
 .comment       0x0000000000000000       0x2a ./bin/functions.elf
 .comment       0x000000000000002a       0x2a ./bin/tarea_1.elf
 .comment       0x0000000000000054       0x2a ./bin/tarea_2.elf
 .comment       0x000000000000007e       0x2a ./bin/tarea_3.elf
 .comment       0x00000000000000a8       0x2a ./bin/tarea_4.elf
 .comment       0x00000000000000d2       0x2a ./bin/functions_rom.elf
 .comment       0x00000000000000fc       0x2a ./bin/scheduler.elf

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 ./bin/scheduler.elf
