     1                                  %include "inc/processor-flags.h" 
     1                              <1> %define X86_CR0_PE      0x00000001 ; /* Protectede mode enable*/
     2                              <1> %define X86_CR0_MP      0x00000002 ; /* Monitor coProcessor*/
     3                              <1> %define X86_CR0_EM      0x00000004 ; /* Emulation*/
     4                              <1> %define X86_CR0_TS      0x00000008 ; /* Task Switched*/
     5                              <1> %define X86_CR0_ET      0x00000010 ; /* Extension Type*/
     6                              <1> %define X86_CR0_NE      0x00000020 ; /* Numeric Error*/
     7                              <1> %define X86_CR0_WP      0x00010000 ; /* Write Protect*/
     8                              <1> %define X86_CR0_AM      0x00040000 ; /* Alignment Mask*/
     9                              <1> %define X86_CR0_NW      0x20000000 ; /* Not Write-through*/
    10                              <1> %define X86_CR0_CD      0x40000000 ; /* Cache Disable*/
    11                              <1> %define X86_CR0_PG      0x80000000 ; /* PaGine*/
    12                              <1> %define flag_TSS_sup    1
    13                              <1> %define flag_TSS_us     0
    14                              <1> 
    15                              <1> ;------------DTP y TP(Descriptor de Tablas de Páginas y Tabla de Páginas) flags--------------------------
    16                              <1> PAG_PCD_YES  equ 1       ; cachable                          
    17                              <1> PAG_PCD_NO   equ 0       ; no cachable
    18                              <1> PAG_PWT_YES  equ 1       ; 1 se escribe en cache y ram       
    19                              <1> PAG_PWT_NO   equ 0       ; 0 
    20                              <1> PAG_P_YES    equ 1       ; 1 presente
    21                              <1> PAG_P_NO     equ 0       ; 0 no presente
    22                              <1> PAG_RW_W     equ 1       ; 1 lectura y escritura
    23                              <1> PAG_RW_R     equ 0       ; 0 solo lectura
    24                              <1> PAG_US_SUP   equ 0       ; 0 supervisor
    25                              <1> PAG_US_US    equ 1       ; 1 usuario  
    26                              <1> PAG_D        equ 0       ; modificacion en la pagina
    27                              <1> PAG_PAT      equ 0       ; PAT                   
    28                              <1> PAG_G_YES    equ 0       ; Global                 
    29                              <1> PAG_A        equ 0       ; accedida
    30                              <1> PAG_PS_4K    equ 0       ; tamaño de pagina de 4KB
    31                              <1> 
    32                              <1> ; ------------ EQU Generales-----------------
    33                              <1> SYS_HALT                EQU     0
    34                              <1> SYS_READ                EQU     1
    35                              <1> SYS_PRINT               EQU     2
    36                              <1> SYS_PRINT_VGA           EQU     3
    37                              <1> ASCII_TRUE              EQU     1
    38                              <1> ASCII_FALSE             EQU     0
     2                                  
     3                                  ; ----------------EXTERN------------
     4                                  EXTERN ejecutar_tarea_1
     5                                  EXTERN __DIGITS_TABLE_VMA
     6                                  
     7                                  ; -----------EXTERN VARIABLES-------
     8                                  
     9                                  ;-----------------EXTERN EQU--------
    10                                  ;EXTERN SYS_P_VGA
    11                                  ; ----------------GLOBAL------------
    12                                  GLOBAL tarea_1_asm
    13                                  GLOBAL resultado_promedio
    14                                  GLOBAL TAREA1_DIGITS_TABLE
    15                                  ;---------------EQU----------------
    16                                  CANTIDAD_DIGITOS    EQU     10      ; Cantidad de dígitos en la tabla     
    17                                  
    18                                  ; -------------RODATA--------------
    19                                  SECTION .rodata_tarea1
    20                                  ;tarea_1_msg              db "- Tarea 1: Promedio",0
    21                                  
    22                                  ;---------------BSS----------------
    23                                  SECTION .bss_tarea1
    24                                  
    25 00000000 <res 00000008>          resultado_promedio         resq    1                    ; Resultado del promedio de dig. de 64 bits
    25          ******************       warning: uninitialized space declared in non-BSS section `.bss_tarea1': zeroing
    26 00000008 <res 00000050>          TAREA1_DIGITS_TABLE        resq    CANTIDAD_DIGITOS     ; Tabla de dígitos de la tarea 1
    26          ******************       warning: uninitialized space declared in non-BSS section `.bss_tarea1': zeroing
    27                                  
    28                                  ; ---------------DATA--------------
    29                                  SECTION .data_tarea1
    30                                  
    31 00000000 50                      CANTIDAD_BYTES_TABLA        db    80
    32                                  
    33                                  
    34                                  ; --------------TEXT---------------
    35                                  SECTION .functions_tarea_1
    36                                  
    37                                  tarea_1_asm:
    38                                      ; La tarea tiene 10ms para correr y el tiempo de sobra espera al scheduler
    39                                      ; -> Sumatoria de dígitos de 64b y cálculo del promedio 
    40                                      
    41                                      ; -> Llamo a la syscall read para copiar la tabla de digitos a la tarea
    42 00000000 BF[08000000]                mov     edi, TAREA1_DIGITS_TABLE
    43 00000005 BE[00000000]                mov     esi, __DIGITS_TABLE_VMA
    44 0000000A 8A0D[00000000]              mov     byte cl, [CANTIDAD_BYTES_TABLA]
    45 00000010 B801000000                  mov     eax, SYS_READ
    46 00000015 CD80                        int 0x80
    47                                  
    48 00000017 B8[08000000]                mov     eax, TAREA1_DIGITS_TABLE    ; Principio de la tabla
    49                                  
    50                                  
    51 0000001C E8(00000000)                call ejecutar_tarea_1
    52                                  
    53                                      ; -> Muestro el resultado del promedio en pantalla
    54 00000021 BF[00000000]                mov edi, resultado_promedio         ; Numero de 64 bits 
    55 00000026 BA01000000                  mov edx, 1                          ; Fila VGA
    56 0000002B B94F000000                  mov ecx, 79                         ; Columna VGA
    57 00000030 B803000000                  mov eax, SYS_PRINT_VGA                  ; Syscall de escritura VGA
    58 00000035 BB04000000                  mov ebx, 4                          ; tamaño del dato    1 = byte, 2 = word, 3 = dword, 4 = qword
    59 0000003A CD80                        int 0x80
    60                                  
    61                                      ; -> Pongo al CPU en halt llamando a int 0x80
    62 0000003C B800000000                  mov eax, SYS_HALT                 
    63 00000041 CD80                        int 0x80 
    64                                  
    65 00000043 EBBB                        jmp tarea_1_asm
    66                                  
    67                                   
