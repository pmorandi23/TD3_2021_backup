
./bin/mibios.elf:     file format elf32-i386
./bin/mibios.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xfffffff0

Program Header:
    LOAD off    0x00001000 vaddr 0xffff0000 paddr 0xffff0000 align 2**12
         filesz 0x00000040 memsz 0x00000040 flags r--
    LOAD off    0x00002000 vaddr 0x00210000 paddr 0xffff1000 align 2**12
         filesz 0x0000017e memsz 0x0000017e flags rw-
    LOAD off    0x00003000 vaddr 0x00010000 paddr 0xffff2000 align 2**12
         filesz 0x000000d5 memsz 0x000000d5 flags r-x
    LOAD off    0x00004000 vaddr 0x00202000 paddr 0xffff3000 align 2**12
         filesz 0x00000003 memsz 0x00000003 flags r--
    LOAD off    0x00005000 vaddr 0x00100000 paddr 0xffff4000 align 2**12
         filesz 0x0000006a memsz 0x0000006a flags r--
    LOAD off    0x00005800 vaddr 0xfffff800 paddr 0xfffff800 align 2**12
         filesz 0x00000800 memsz 0x00000800 flags r-x
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .codigo_kernel32 00000003  00202000  ffff3000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .functions    000000d5  00010000  ffff2000  00003000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         0000017e  00210000  ffff1000  00002000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .handlers     0000006a  00100000  ffff4000  00005000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .codigo_init16 00000040  ffff0000  ffff0000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .codigo_init32 000000ad  fffff800  fffff800  00005800  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .functions_rom 0000003c  fffffc00  fffffc00  00005c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .sys_tables_32 00000026  fffffd00  fffffd00  00005d00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .codigo_reset 00000010  fffffff0  fffffff0  00005ff0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .comment      00000029  00000000  00000000  00006000  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00202000 l    d  .codigo_kernel32	00000000 .codigo_kernel32
00010000 l    d  .functions	00000000 .functions
00210000 l    d  .data	00000000 .data
00100000 l    d  .handlers	00000000 .handlers
ffff0000 l    d  .codigo_init16	00000000 .codigo_init16
fffff800 l    d  .codigo_init32	00000000 .codigo_init32
fffffc00 l    d  .functions_rom	00000000 .functions_rom
fffffd00 l    d  .sys_tables_32	00000000 .sys_tables_32
fffffff0 l    d  .codigo_reset	00000000 .codigo_reset
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 src/main.s
00000003 l       *ABS*	00000000 kernel21_code_size
00202000 l       .codigo_kernel32	00000000 guard
00202003 l       .codigo_kernel32	00000000 kernel32_end
00000000 l    df *ABS*	00000000 functions.c
00000000 l    df *ABS*	00000000 src/functions_asm.s
000100d3 l       .functions	00000000 end_handler_teclado
00000000 l    df *ABS*	00000000 src/sys_idt_table_32.s
00000010 l       *ABS*	00000000 H_ISRXX_Handler
00210000 l       .data	00000000 IDT
00000000 l       *ABS*	00000000 ISR00_IDT
00000008 l       *ABS*	00000000 ISR01_IDT
00000010 l       *ABS*	00000000 ISR02_IDT
00000018 l       *ABS*	00000000 ISR03_IDT
00000020 l       *ABS*	00000000 ISR04_IDT
00000028 l       *ABS*	00000000 ISR05_IDT
00000030 l       *ABS*	00000000 ISR06_IDT
00000038 l       *ABS*	00000000 ISR07_IDT
00000040 l       *ABS*	00000000 ISR08_IDT
00000048 l       *ABS*	00000000 ISR09_IDT
00000050 l       *ABS*	00000000 ISR10_IDT
00000058 l       *ABS*	00000000 ISR11_IDT
00000060 l       *ABS*	00000000 ISR12_IDT
00000068 l       *ABS*	00000000 ISR13_IDT
00000070 l       *ABS*	00000000 ISR14_IDT
00000078 l       *ABS*	00000000 ISR15_IDT
00000080 l       *ABS*	00000000 ISR16_IDT
00000088 l       *ABS*	00000000 ISR17_IDT
00000090 l       *ABS*	00000000 ISR18_IDT
00000098 l       *ABS*	00000000 ISR19_IDT
000000a0 l       *ABS*	00000000 ISR20to31_idt
00000100 l       *ABS*	00000000 ISR32_IRQ_0
00000108 l       *ABS*	00000000 ISR32_IRQ_1
00000110 l       *ABS*	00000000 ISR32_IRQ_2_15
00000178 l       *ABS*	00000000 IDT_LENGTH
00000000 l    df *ABS*	00000000 functions_rom.c
00000000 l    df *ABS*	00000000 src/handlers_32.s
00100000 l       *ABS*	00000000 VMA_ISR_TECLADO
00000019 l       .handlers	00000000 L_ISR01_Handler_DB
00100000 l       .handlers	00000000 IRQ01_Handler
0010000e l       .handlers	00000000 ISR00_Handler_DE
00100019 l       .handlers	00000000 ISR01_Handler_DB
0010001d l       .handlers	00000000 ISR02_Handler_NMI
00100021 l       .handlers	00000000 ISR03_Handler_BP
00100025 l       .handlers	00000000 ISR04_Handler_OF
00100029 l       .handlers	00000000 ISR05_Handler_BR
0010002d l       .handlers	00000000 ISR06_Handler_UD
00100038 l       .handlers	00000000 ISR07_Handler_NM
0010003c l       .handlers	00000000 ISR08_Handler_DF
00100040 l       .handlers	00000000 ISR10_Handler_TS
00100044 l       .handlers	00000000 ISR11_Handler_NP
00100048 l       .handlers	00000000 ISR12_Handler_SS
0010004c l       .handlers	00000000 ISR13_Handler_GP
00100050 l       .handlers	00000000 ISR14_Handler_PF
00100054 l       .handlers	00000000 ISR15_Handler_RES
00100058 l       .handlers	00000000 ISR16_Handler_MF
0010005c l       .handlers	00000000 ISR17_Handler_AC
00100060 l       .handlers	00000000 ISR18_Handler_MC
00100064 l       .handlers	00000000 ISR19_Handler_XM
00100068 l       .handlers	00000000 ISR_Main
00000000 l    df *ABS*	00000000 src/init16.s
ffff003f l       .codigo_init16	00000000 fault_end
00000000 l    df *ABS*	00000000 src/init32.s
fffff81a l       .codigo_init32	00000000 start32_launcher.stack_init
fffff8aa l       .codigo_init32	00000000 start32_launcher.guard
00000000 l    df *ABS*	00000000 src/sys_gdt_table_32.s
fffffd00 l       .sys_tables_32	00000000 GDT
00000000 l       *ABS*	00000000 NULL_SEL
00000020 l       *ABS*	00000000 GDT_LENGTH
00000000 l    df *ABS*	00000000 src/reset.s
fffffff5 l       .codigo_reset	00000000 halted
0000001d g       .handlers	00000000 L_ISR02_Handler_NMI
0000017e g       *ABS*	00000000 __data_size
fffffff0 g       *ABS*	00000000 __RESET_LMA
0000003c g       .handlers	00000000 L_ISR08_Handler_DF
00000100 g       *ABS*	00000000 __SYS_TABLE_GDT_VMA
ffff2000 g       *ABS*	00000000 __FUNCTIONS_LMA
0000006a g       *ABS*	00000000 __handlers_32_size
000000d5 g       *ABS*	00000000 __functions_size
fffffc00 g       *ABS*	00000000 __FUNCTIONS_ROM_VMA
ffff0000 g       *ABS*	00000000 __INIT_16_LMA
fffffc00 g       *ABS*	00000000 __FUNCTIONS_ROM_LMA
fffffff0 g       .codigo_reset	00000000 reset
00100000 g       *ABS*	00000000 __TECLADO_ISR_VMA
2fff8000 g       *ABS*	00000000 __STACK_START_32
00010000 g       *ABS*	00000000 __FUNCTIONS_VMA
ffff0000 g       *ABS*	00000000 __INIT_16_VMA
00010089 g       .functions	00000000 init_pic
fffffd20 g       .sys_tables_32	00000000 _gdtr
00000058 g       .handlers	00000000 L_ISR16_Handler_MF
00000048 g       .handlers	00000000 L_ISR12_Handler_SS
0000002d g       .handlers	00000000 L_ISR06_Handler_UD
00000021 g       .handlers	00000000 L_ISR03_Handler_BP
fffffd00 g       *ABS*	00000000 __SYS_TABLES_VMA
00009000 g       *ABS*	00000000 __STACK_START_16
ffff4000 g       *ABS*	00000000 __TECLADO_ISR_LMA
00202000 g       .codigo_kernel32	00000000 kernel32_init
0000004c g       .handlers	00000000 L_ISR13_Handler_GP
00000040 g       .handlers	00000000 L_ISR10_Handler_TS
2fff8fff g       *ABS*	00000000 __STACK_END_32
00202000 g       *ABS*	00000000 __KERNEL_32_VMA
00010000 g     F .functions	0000003c __fast_memcpy
00000038 g       .handlers	00000000 L_ISR07_Handler_NM
00000010 g       *ABS*	00000000 CS_SEL_32
00000018 g       *ABS*	00000000 DS_SEL_32
000003ff g       *ABS*	00000000 __STACK_SIZE_32
00009fff g       *ABS*	00000000 __STACK_END_16
ffff3000 g       *ABS*	00000000 __KERNEL_32_LMA
0000005c g       .handlers	00000000 L_ISR17_Handler_AC
00000008 g       *ABS*	00000000 CS_SEL_16
00000000 g       *ABS*	00000000 __SYS_TABLE_IDT
fffffff0 g       *ABS*	00000000 __RESET_VMA
0000000e g       .handlers	00000000 L_ISR00_Handler_DE
00000064 g       .handlers	00000000 L_ISR19_Handler_XM
00000050 g       .handlers	00000000 L_ISR14_Handler_PF
00000025 g       .handlers	00000000 L_ISR04_Handler_OF
00210178 g       .data	00000000 _idtr
00000060 g       .handlers	00000000 L_ISR18_Handler_MC
fffff800 g       *ABS*	00000000 __INIT_32_VMA
00060000 g       *ABS*	00000000 __EH_FRAME
000100b6 g       .functions	00000000 handler_teclado
00000026 g       *ABS*	00000000 __sys_tables_size
00000029 g       .handlers	00000000 L_ISR05_Handler_BR
ffff0000 g       .codigo_init16	00000000 start16
00210000 g       *ABS*	00000000 __DATA_VMA
fffff800 g       *ABS*	00000000 __INIT_32_LMA
fffffd00 g       *ABS*	00000000 __SYS_TABLES_LMA
00000003 g       *ABS*	00000000 __codigo_kernel32_size
fffffc00 g     F .functions_rom	0000003c __fast_memcpy_rom
0001003c g     F .functions	0000004d determinar_tecla_presionada
fffff800 g       .codigo_init32	00000000 start32_launcher
ffff1000 g       *ABS*	00000000 __DATA_LMA
00000000 g       .handlers	00000000 L_IRQ01_Handler
00000044 g       .handlers	00000000 L_ISR11_Handler_NP


Contents of section .codigo_kernel32:
 202000 f4ebfd                               ...             
Contents of section .functions:
 10000 5589e583 ec10c645 ff00837d 10007426  U......E...}..t&
 10010 eb1a836d 10018b55 088d4204 8945088b  ...m...U..B..E..
 10020 450c8d48 04894d0c 8b128910 837d1000  E..H..M......}..
 10030 75e0c645 ff010fb6 45ffc9c3 5589e583  u..E....E...U...
 10040 ec10c645 ff008b45 0883f817 743783f8  ...E...E....t7..
 10050 17770783 f816740e eb2c83f8 1e741383  .w....t..,...t..
 10060 f81f7406 eb200f0b eb1cbc00 00000050  ..t.. .........P
 10070 eb140fb6 45ffba00 0000000f b6c0f6f2  ....E...........
 10080 8845ffeb 019090c9 c3b011e6 20b020e6  .E.......... . .
 10090 21b004e6 21b001e6 21b0fde6 21b011e6  !...!...!...!...
 100a0 a0b028e6 a1b002e6 a1b001e6 a1b0ffe6  ..(.............
 100b0 a1b0fce6 21c36031 c0e46424 013c0175  ....!.`1..d$.<.u
 100c0 12e46088 c380e380 80fb8074 0650e869  ..`........t.P.i
 100d0 ffffff61 c3                          ...a.           
Contents of section .data:
 210000 0e001000 008f1000 00000000 00000000  ................
 210010 1d001000 008f1000 21001000 008f1000  ........!.......
 210020 25001000 008f1000 29001000 008f1000  %.......).......
 210030 2d001000 008f1000 38001000 008f1000  -.......8.......
 210040 3c001000 008f1000 00000000 00000000  <...............
 210050 40001000 008f1000 44001000 008f1000  @.......D.......
 210060 48001000 008f1000 4c001000 008f1000  H.......L.......
 210070 50001000 008f1000 00000000 00000000  P...............
 210080 58001000 008f1000 5c001000 008f1000  X.......\.......
 210090 60001000 008f1000 64001000 008f1000  `.......d.......
 2100a0 00000000 00000000 00000000 00000000  ................
 2100b0 00000000 00000000 00000000 00000000  ................
 2100c0 00000000 00000000 00000000 00000000  ................
 2100d0 00000000 00000000 00000000 00000000  ................
 2100e0 00000000 00000000 00000000 00000000  ................
 2100f0 00000000 00000000 00000000 00000000  ................
 210100 00000000 00000000 00001000 008e1000  ................
 210110 00000000 00000000 00000000 00000000  ................
 210120 00000000 00000000 00000000 00000000  ................
 210130 00000000 00000000 00000000 00000000  ................
 210140 00000000 00000000 00000000 00000000  ................
 210150 00000000 00000000 00000000 00000000  ................
 210160 00000000 00000000 00000000 00000000  ................
 210170 00000000 00000000 77010000 2100      ........w...!.  
Contents of section .handlers:
 100000 60b221e8 ae00f1ff b020e620 61cf6687  `.!...... . a.f.
 100010 dbb200e8 50000000 cfb201f4 cfb202f4  ....P...........
 100020 cfb203f4 cfb204f4 cfb205f4 cf6687db  .............f..
 100030 b206e831 000000cf b207f4cf b208f4cf  ...1............
 100040 b20af4cf b20bf4cf b20cf4cf b20df4cf  ................
 100050 b20ef4cf b20ff4cf b210f4cf b211f4cf  ................
 100060 b212f4cf b213f4cf f4c3               ..........      
Contents of section .codigo_init16:
 ffff0000 66a90000 00007537 6631c00f 22d88cc8  f.....u7f1.."...
 ffff0010 8ed8b800 908ed0bc ff9f0f20 c0660d00  ........... .f..
 ffff0020 0000600f 22c00f09 660f0116 20fd0f01  ..`."...f... ...
 ffff0030 e083c801 0f01f066 ea00f8ff ff1000f4  .......f........
Contents of section .codigo_init32:
 fffff800 66b81800 8ed88ec0 8ee88ee0 8ed0bcff  f...............
 fffff810 8fff2f31 c0b9ff03 000050e2 fdbcff8f  ../1......P.....
 fffff820 ff2f5589 e568d500 00006800 00010068  ./U..h....h....h
 fffff830 0020ffff e8c70300 00c983f8 01756b55  . ...........ukU
 fffff840 89e56803 00000068 00202000 680030ff  ..h....h.  .h.0.
 fffff850 ffe8aa07 0100c983 f801754e 5589e568  ..........uNU..h
 fffff860 6a000000 68000010 00680040 ffffe88d  j...h....h.@....
 fffff870 070100c9 83f80175 315589e5 687e0100  .......u1U..h~..
 fffff880 00680000 21006800 10ffffe8 70070100  .h..!.h.....p...
 fffff890 c983f801 75140f01 1d780121 00fbe8e6  ....u....x.!....
 fffff8a0 070100ea 00202000 1000f4eb fd        .....  ......   
Contents of section .functions_rom:
 fffffc00 5589e583 ec10c645 ff00837d 10007426  U......E...}..t&
 fffffc10 eb1a836d 10018b55 088d4204 8945088b  ...m...U..B..E..
 fffffc20 450c8d48 04894d0c 8b128910 837d1000  E..H..M......}..
 fffffc30 75e0c645 ff010fb6 45ffc9c3           u..E....E...    
Contents of section .sys_tables_32:
 fffffd00 00000000 00000000 ffff0000 ff9940ff  ..............@.
 fffffd10 ffff0000 0099cf00 ffff0000 0092cf00  ................
 fffffd20 1f0000fd ffff                        ......          
Contents of section .codigo_reset:
 fffffff0 fafce90b 00f4ebfd 90909090 90909090  ................
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e35  GCC: (Ubuntu 7.5
 0010 2e302d33 7562756e 7475317e 31382e30  .0-3ubuntu1~18.0
 0020 34292037 2e352e30 00                 4) 7.5.0.       

Disassembly of section .functions:
00010000 <__fast_memcpy> push   %ebp
00010001 <__fast_memcpy+0x1> mov    %esp,%ebp
00010003 <__fast_memcpy+0x3> sub    $0x10,%esp
00010006 <__fast_memcpy+0x6> movb   $0x0,-0x1(%ebp)
0001000a <__fast_memcpy+0xa> cmpl   $0x0,0x10(%ebp)
0001000e <__fast_memcpy+0xe> je     00010036 <__fast_memcpy+0x36>
00010010 <__fast_memcpy+0x10> jmp    0001002c <__fast_memcpy+0x2c>
00010012 <__fast_memcpy+0x12> subl   $0x1,0x10(%ebp)
00010016 <__fast_memcpy+0x16> mov    0x8(%ebp),%edx
00010019 <__fast_memcpy+0x19> lea    0x4(%edx),%eax
0001001c <__fast_memcpy+0x1c> mov    %eax,0x8(%ebp)
0001001f <__fast_memcpy+0x1f> mov    0xc(%ebp),%eax
00010022 <__fast_memcpy+0x22> lea    0x4(%eax),%ecx
00010025 <__fast_memcpy+0x25> mov    %ecx,0xc(%ebp)
00010028 <__fast_memcpy+0x28> mov    (%edx),%edx
0001002a <__fast_memcpy+0x2a> mov    %edx,(%eax)
0001002c <__fast_memcpy+0x2c> cmpl   $0x0,0x10(%ebp)
00010030 <__fast_memcpy+0x30> jne    00010012 <__fast_memcpy+0x12>
00010032 <__fast_memcpy+0x32> movb   $0x1,-0x1(%ebp)
00010036 <__fast_memcpy+0x36> movzbl -0x1(%ebp),%eax
0001003a <__fast_memcpy+0x3a> leave  
0001003b <__fast_memcpy+0x3b> ret    
0001003c <determinar_tecla_presionada> push   %ebp
0001003d <determinar_tecla_presionada+0x1> mov    %esp,%ebp
0001003f <determinar_tecla_presionada+0x3> sub    $0x10,%esp
00010042 <determinar_tecla_presionada+0x6> movb   $0x0,-0x1(%ebp)
00010046 <determinar_tecla_presionada+0xa> mov    0x8(%ebp),%eax
00010049 <determinar_tecla_presionada+0xd> cmp    $0x17,%eax
0001004c <determinar_tecla_presionada+0x10> je     00010085 <determinar_tecla_presionada+0x49>
0001004e <determinar_tecla_presionada+0x12> cmp    $0x17,%eax
00010051 <determinar_tecla_presionada+0x15> ja     0001005a <determinar_tecla_presionada+0x1e>
00010053 <determinar_tecla_presionada+0x17> cmp    $0x16,%eax
00010056 <determinar_tecla_presionada+0x1a> je     00010066 <determinar_tecla_presionada+0x2a>
00010058 <determinar_tecla_presionada+0x1c> jmp    00010086 <determinar_tecla_presionada+0x4a>
0001005a <determinar_tecla_presionada+0x1e> cmp    $0x1e,%eax
0001005d <determinar_tecla_presionada+0x21> je     00010072 <determinar_tecla_presionada+0x36>
0001005f <determinar_tecla_presionada+0x23> cmp    $0x1f,%eax
00010062 <determinar_tecla_presionada+0x26> je     0001006a <determinar_tecla_presionada+0x2e>
00010064 <determinar_tecla_presionada+0x28> jmp    00010086 <determinar_tecla_presionada+0x4a>
00010066 <determinar_tecla_presionada+0x2a> ud2    
00010068 <determinar_tecla_presionada+0x2c> jmp    00010086 <determinar_tecla_presionada+0x4a>
0001006a <determinar_tecla_presionada+0x2e> mov    $0x0,%esp
0001006f <determinar_tecla_presionada+0x33> push   %eax
00010070 <determinar_tecla_presionada+0x34> jmp    00010086 <determinar_tecla_presionada+0x4a>
00010072 <determinar_tecla_presionada+0x36> movzbl -0x1(%ebp),%eax
00010076 <determinar_tecla_presionada+0x3a> mov    $0x0,%edx
0001007b <determinar_tecla_presionada+0x3f> movzbl %al,%eax
0001007e <determinar_tecla_presionada+0x42> div    %dl
00010080 <determinar_tecla_presionada+0x44> mov    %al,-0x1(%ebp)
00010083 <determinar_tecla_presionada+0x47> jmp    00010086 <determinar_tecla_presionada+0x4a>
00010085 <determinar_tecla_presionada+0x49> nop
00010086 <determinar_tecla_presionada+0x4a> nop
00010087 <determinar_tecla_presionada+0x4b> leave  
00010088 <determinar_tecla_presionada+0x4c> ret    
00010089 <init_pic> mov    $0x11,%al
0001008b <init_pic+0x2> out    %al,$0x20
0001008d <init_pic+0x4> mov    $0x20,%al
0001008f <init_pic+0x6> out    %al,$0x21
00010091 <init_pic+0x8> mov    $0x4,%al
00010093 <init_pic+0xa> out    %al,$0x21
00010095 <init_pic+0xc> mov    $0x1,%al
00010097 <init_pic+0xe> out    %al,$0x21
00010099 <init_pic+0x10> mov    $0xfd,%al
0001009b <init_pic+0x12> out    %al,$0x21
0001009d <init_pic+0x14> mov    $0x11,%al
0001009f <init_pic+0x16> out    %al,$0xa0
000100a1 <init_pic+0x18> mov    $0x28,%al
000100a3 <init_pic+0x1a> out    %al,$0xa1
000100a5 <init_pic+0x1c> mov    $0x2,%al
000100a7 <init_pic+0x1e> out    %al,$0xa1
000100a9 <init_pic+0x20> mov    $0x1,%al
000100ab <init_pic+0x22> out    %al,$0xa1
000100ad <init_pic+0x24> mov    $0xff,%al
000100af <init_pic+0x26> out    %al,$0xa1
000100b1 <init_pic+0x28> mov    $0xfc,%al
000100b3 <init_pic+0x2a> out    %al,$0x21
000100b5 <init_pic+0x2c> ret    
000100b6 <handler_teclado> pusha  
000100b7 <handler_teclado+0x1> xor    %eax,%eax
000100b9 <handler_teclado+0x3> in     $0x64,%al
000100bb <handler_teclado+0x5> and    $0x1,%al
000100bd <handler_teclado+0x7> cmp    $0x1,%al
000100bf <handler_teclado+0x9> jne    000100d3 <end_handler_teclado>
000100c1 <handler_teclado+0xb> in     $0x60,%al
000100c3 <handler_teclado+0xd> mov    %al,%bl
000100c5 <handler_teclado+0xf> and    $0x80,%bl
000100c8 <handler_teclado+0x12> cmp    $0x80,%bl
000100cb <handler_teclado+0x15> je     000100d3 <end_handler_teclado>
000100cd <handler_teclado+0x17> push   %eax
000100ce <handler_teclado+0x18> call   0001003c <determinar_tecla_presionada>
000100d3 <end_handler_teclado> popa   
000100d4 <end_handler_teclado+0x1> ret    

Disassembly of section .functions_rom:
fffffc00 <__fast_memcpy_rom> push   %ebp
fffffc01 <__fast_memcpy_rom+0x1> mov    %esp,%ebp
fffffc03 <__fast_memcpy_rom+0x3> sub    $0x10,%esp
fffffc06 <__fast_memcpy_rom+0x6> movb   $0x0,-0x1(%ebp)
fffffc0a <__fast_memcpy_rom+0xa> cmpl   $0x0,0x10(%ebp)
fffffc0e <__fast_memcpy_rom+0xe> je     fffffc36 <__fast_memcpy_rom+0x36>
fffffc10 <__fast_memcpy_rom+0x10> jmp    fffffc2c <__fast_memcpy_rom+0x2c>
fffffc12 <__fast_memcpy_rom+0x12> subl   $0x1,0x10(%ebp)
fffffc16 <__fast_memcpy_rom+0x16> mov    0x8(%ebp),%edx
fffffc19 <__fast_memcpy_rom+0x19> lea    0x4(%edx),%eax
fffffc1c <__fast_memcpy_rom+0x1c> mov    %eax,0x8(%ebp)
fffffc1f <__fast_memcpy_rom+0x1f> mov    0xc(%ebp),%eax
fffffc22 <__fast_memcpy_rom+0x22> lea    0x4(%eax),%ecx
fffffc25 <__fast_memcpy_rom+0x25> mov    %ecx,0xc(%ebp)
fffffc28 <__fast_memcpy_rom+0x28> mov    (%edx),%edx
fffffc2a <__fast_memcpy_rom+0x2a> mov    %edx,(%eax)
fffffc2c <__fast_memcpy_rom+0x2c> cmpl   $0x0,0x10(%ebp)
fffffc30 <__fast_memcpy_rom+0x30> jne    fffffc12 <__fast_memcpy_rom+0x12>
fffffc32 <__fast_memcpy_rom+0x32> movb   $0x1,-0x1(%ebp)
fffffc36 <__fast_memcpy_rom+0x36> movzbl -0x1(%ebp),%eax
fffffc3a <__fast_memcpy_rom+0x3a> leave  
fffffc3b <__fast_memcpy_rom+0x3b> ret    
