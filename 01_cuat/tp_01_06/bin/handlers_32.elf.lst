     1                                  USE32
     2                                  
     3                                  %include "inc/functions_asm.h" 
     1                              <1> ;----------------PIC----------------------------
     2                              <1> %define PORT_A_8042    0x60
     3                              <1> %define CTRL_PORT_8042 0x64
     4                              <1> %define KEYB_DIS       0xAD
     5                              <1> %define KEYB_EN        0xAE
     6                              <1> %define READ_OUT_8042  0xD0
     7                              <1> %define WRITE_OUT_8042 0xD1
     8                              <1> 
     4                                  
     5                                  ;----------------GLOBAL--------------------
     6                                  EXTERN DS_SEL_32
     7                                  EXTERN CS_SEL_32
     8                                  EXTERN __TECLADO_ISR_VMA
     9                                  EXTERN __DIGITS_TABLE_INIT
    10                                  EXTERN determinar_tecla_presionada
    11                                  EXTERN memoria_buffer_reservada
    12                                  ;----------------EXTERN--------------------
    13                                  GLOBAL L_ISR00_Handler_DE
    14                                  GLOBAL L_ISR02_Handler_NMI
    15                                  GLOBAL L_ISR03_Handler_BP
    16                                  GLOBAL L_ISR04_Handler_OF
    17                                  GLOBAL L_ISR05_Handler_BR
    18                                  GLOBAL L_ISR06_Handler_UD
    19                                  GLOBAL L_ISR07_Handler_NM
    20                                  GLOBAL L_ISR08_Handler_DF
    21                                  GLOBAL L_ISR10_Handler_TS
    22                                  GLOBAL L_ISR11_Handler_NP
    23                                  GLOBAL L_ISR12_Handler_SS
    24                                  GLOBAL L_ISR13_Handler_GP
    25                                  GLOBAL L_ISR14_Handler_PF
    26                                  GLOBAL L_ISR16_Handler_MF
    27                                  GLOBAL L_ISR17_Handler_AC
    28                                  GLOBAL L_ISR18_Handler_MC
    29                                  GLOBAL L_ISR19_Handler_XM
    30                                  GLOBAL L_IRQ01_Handler
    31                                  ;----------------EQU--------------------
    32                                  VMA_ISR_TECLADO     EQU 0x00100000
    33                                  ; Parte baja de las direcciones de los Handlers 
    34                                  L_ISR00_Handler_DE  EQU ISR00_Handler_DE    - VMA_ISR_TECLADO 
    35                                  L_ISR01_Handler_DB  EQU ISR01_Handler_DB    - VMA_ISR_TECLADO 
    36                                  L_ISR02_Handler_NMI EQU ISR02_Handler_NMI   - VMA_ISR_TECLADO 
    37                                  L_ISR03_Handler_BP  EQU ISR03_Handler_BP    - VMA_ISR_TECLADO 
    38                                  L_ISR04_Handler_OF  EQU ISR04_Handler_OF    - VMA_ISR_TECLADO 
    39                                  L_ISR05_Handler_BR  EQU ISR05_Handler_BR    - VMA_ISR_TECLADO 
    40                                  L_ISR06_Handler_UD  EQU ISR06_Handler_UD    - VMA_ISR_TECLADO 
    41                                  L_ISR07_Handler_NM  EQU ISR07_Handler_NM    - VMA_ISR_TECLADO 
    42                                  L_ISR08_Handler_DF  EQU ISR08_Handler_DF    - VMA_ISR_TECLADO   
    43                                  L_ISR10_Handler_TS  EQU ISR10_Handler_TS    - VMA_ISR_TECLADO 
    44                                  L_ISR11_Handler_NP  EQU ISR11_Handler_NP    - VMA_ISR_TECLADO 
    45                                  L_ISR12_Handler_SS  EQU ISR12_Handler_SS    - VMA_ISR_TECLADO 
    46                                  L_ISR13_Handler_GP  EQU ISR13_Handler_GP    - VMA_ISR_TECLADO 
    47                                  L_ISR14_Handler_PF  EQU ISR14_Handler_PF    - VMA_ISR_TECLADO 
    48                                  L_ISR16_Handler_MF  EQU ISR16_Handler_MF    - VMA_ISR_TECLADO 
    49                                  L_ISR17_Handler_AC  EQU ISR17_Handler_AC    - VMA_ISR_TECLADO 
    50                                  L_ISR18_Handler_MC  EQU ISR18_Handler_MC    - VMA_ISR_TECLADO 
    51                                  L_ISR19_Handler_XM  EQU ISR19_Handler_XM    - VMA_ISR_TECLADO 
    52                                  L_IRQ01_Handler     EQU IRQ01_Handler       - VMA_ISR_TECLADO
    53                                  
    54                                  ;----------------SECTION-----------------------
    55                                  SECTION .teclado_and_ISR
    56                                  ;----------HANDLER IRQ TECLADO-----------------
    57                                  IRQ01_Handler:
    58                                      ;xchg    bx, bx                              ; Breakpoint
    59 00000000 60                          pushad                                      ; Guardo todos los registros  para asegurarme que no se rompa el estado actual.
    60 00000001 B221                        mov     dl,0x21                             ; Guardo la interrupcion en el registro DX
    61 00000003 31C0                        xor     eax, eax
    62 00000005 E464                        in      al, CTRL_PORT_8042                  ; Leo el puerto 0x64 (Keyboard Controller Status Register)
    63 00000007 2401                        and     al, 0x01                            ; Hago un AND para obtener el bit 0 (Output buffer status)
    64 00000009 3C01                        cmp     al, 0x01                            ; Si el bit vale 1 el buffer de salida esta lleno (se puede leer)
    65 0000000B 751A                        jnz     end_handler_teclado                 ; Si está vacío me voy. Si hay algo, lo leo.
    66                                      ; ->Leo el puerto
    67 0000000D E460                        in      al, PORT_A_8042                     ; Leo el puerto 0x60 (Keyboard Output Buffer Register)
    68 0000000F 88C3                        mov     bl, al                              ; Copio lo leído en otro registro
    69 00000011 80E380                      and     bl, 0x80                            ; Hago un AND para obtener el bit 7 (BRK)
    70 00000014 80FB80                      cmp     bl, 0x80                            ; Si el bit vale 0 la tecla fue presionada (Make), si es 1 se dejó de presionar (Break)
    71 00000017 740E                        jz      end_handler_teclado                 ; Si la tecla fue presionada me voy (detecto solo cuando se suelta)
    72 00000019 68[00000000]                push    dword memoria_buffer_reservada      ; Buffer en VMA
    73 0000001E 50                          push    eax                                 ; Tecla presionada.
    74 0000001F E8(00000000)                call determinar_tecla_presionada
    75 00000024 83C408                      add     esp, 8
    76                                      ;leave
    77                                  end_handler_teclado:
    78 00000027 B020                        mov     al, 0x20                    ; ACK de la IRQ para el PIC 
    79 00000029 E620                        out     0x20, al
    80 0000002B 61                          popad                               ; Recupero registros
    81 0000002C CF                          iret                                ; Retorno de la IRQ
    82                                  
    83                                  ;-----------HANDLERs DE EXCEPTIONS-------------
    84                                  ;#DE (Divide Error)
    85                                  ISR00_Handler_DE:
    86 0000002D 6687DB                      xchg    bx,bx
    87 00000030 B200                        mov     dl,0x00
    88 00000032 F4                          hlt
    89                                  
    90                                  ISR01_Handler_DB:
    91 00000033 B201                        mov dl,0x01
    92 00000035 F4                          hlt
    93                                  
    94                                  ISR02_Handler_NMI:
    95 00000036 B202                        mov dl,0x02
    96 00000038 F4                          hlt
    97                                  
    98                                  ISR03_Handler_BP:
    99 00000039 B203                        mov dl,0x03
   100 0000003B F4                          hlt
   101                                  
   102                                  ISR04_Handler_OF:
   103 0000003C B204                        mov dl,0x04
   104 0000003E F4                          hlt
   105                                  
   106                                  ISR05_Handler_BR:
   107 0000003F B205                        mov dl,0x05
   108 00000041 F4                          hlt
   109                                  ;#UD (Invalid Opcode Fetch) 
   110                                  ISR06_Handler_UD:
   111 00000042 6687DB                      xchg    bx,bx
   112 00000045 B206                        mov     dl,0x06
   113 00000047 F4                          hlt
   114                                  
   115                                  ISR07_Handler_NM:
   116 00000048 B207                        mov dl,0x07
   117 0000004A F4                          hlt
   118                                  
   119                                  ISR08_Handler_DF:
   120 0000004B B208                        mov dl,0x08
   121 0000004D F4                          hlt
   122                                  
   123                                  ISR10_Handler_TS:
   124 0000004E B20A                        mov dl,0x0A
   125 00000050 F4                          hlt
   126                                  
   127                                  ISR11_Handler_NP:
   128 00000051 B20B                        mov dl,0x0B
   129 00000053 F4                          hlt
   130                                  
   131                                  ISR12_Handler_SS:
   132 00000054 B20C                        mov dl,0x0C
   133 00000056 F4                          hlt
   134                                  ; Funciono al no tener el CS al retornar de un call
   135                                  ISR13_Handler_GP:
   136 00000057 B20D                        mov dl,0x0D
   137 00000059 F4                          hlt
   138 0000005A CF                          iret
   139                                  
   140                                  ISR14_Handler_PF:
   141 0000005B B20E                        mov dl,0x0E
   142 0000005D F4                          hlt
   143                                  
   144                                  ISR15_Handler_RES:
   145 0000005E B20F                        mov dl,0x0F
   146 00000060 F4                          hlt
   147                                  
   148                                  ISR16_Handler_MF:
   149 00000061 B210                        mov dl,0x10
   150 00000063 F4                          hlt
   151                                  
   152                                  ISR17_Handler_AC:
   153 00000064 B211                        mov dl,0x11
   154 00000066 F4                          hlt
   155                                  
   156                                  ISR18_Handler_MC:
   157 00000067 B212                        mov dl,0x12
   158 00000069 F4                          hlt
   159                                  
   160                                  ISR19_Handler_XM:
   161 0000006A B213                        mov dl,0x13
   162 0000006C F4                          hlt
