     1                                  USE32
     2                                  
     3                                  %include "inc/functions_asm.h" 
     1                              <1> ;----------------PIC----------------------------
     2                              <1> %define PORT_A_8042    0x60
     3                              <1> %define CTRL_PORT_8042 0x64
     4                              <1> %define KEYB_DIS       0xAD
     5                              <1> %define KEYB_EN        0xAE
     6                              <1> %define READ_OUT_8042  0xD0
     7                              <1> %define WRITE_OUT_8042 0xD1
     8                              <1> 
     4                                  
     5                                  ;----------------GLOBAL--------------------
     6                                  EXTERN DS_SEL_32
     7                                  EXTERN CS_SEL_32
     8                                  EXTERN __TECLADO_ISR_VMA
     9                                  EXTERN __DIGITS_TABLE_INIT
    10                                  EXTERN determinar_tecla_presionada
    11                                  EXTERN memoria_buffer_reservada
    12                                  EXTERN contador_handler
    13                                  EXTERN contador_timer
    14                                  EXTERN resultado_promedio
    15                                  EXTERN __DIGITS_TABLE
    16                                  ;----------------EXTERN--------------------
    17                                  GLOBAL L_ISR00_Handler_DE
    18                                  GLOBAL L_ISR02_Handler_NMI
    19                                  GLOBAL L_ISR03_Handler_BP
    20                                  GLOBAL L_ISR04_Handler_OF
    21                                  GLOBAL L_ISR05_Handler_BR
    22                                  GLOBAL L_ISR06_Handler_UD
    23                                  GLOBAL L_ISR07_Handler_NM
    24                                  GLOBAL L_ISR08_Handler_DF
    25                                  GLOBAL L_ISR10_Handler_TS
    26                                  GLOBAL L_ISR11_Handler_NP
    27                                  GLOBAL L_ISR12_Handler_SS
    28                                  GLOBAL L_ISR13_Handler_GP
    29                                  GLOBAL L_ISR14_Handler_PF
    30                                  GLOBAL L_ISR16_Handler_MF
    31                                  GLOBAL L_ISR17_Handler_AC
    32                                  GLOBAL L_ISR18_Handler_MC
    33                                  GLOBAL L_ISR19_Handler_XM
    34                                  GLOBAL L_IRQ00_Handler
    35                                  GLOBAL L_IRQ01_Handler
    36                                  ;----------------EQU--------------------
    37                                  VMA_ISR_TECLADO     EQU 0x00100000
    38                                  ; Parte baja de las direcciones de los Handlers 
    39                                  L_ISR00_Handler_DE  EQU ISR00_Handler_DE    - VMA_ISR_TECLADO 
    40                                  L_ISR01_Handler_DB  EQU ISR01_Handler_DB    - VMA_ISR_TECLADO 
    41                                  L_ISR02_Handler_NMI EQU ISR02_Handler_NMI   - VMA_ISR_TECLADO 
    42                                  L_ISR03_Handler_BP  EQU ISR03_Handler_BP    - VMA_ISR_TECLADO 
    43                                  L_ISR04_Handler_OF  EQU ISR04_Handler_OF    - VMA_ISR_TECLADO 
    44                                  L_ISR05_Handler_BR  EQU ISR05_Handler_BR    - VMA_ISR_TECLADO 
    45                                  L_ISR06_Handler_UD  EQU ISR06_Handler_UD    - VMA_ISR_TECLADO 
    46                                  L_ISR07_Handler_NM  EQU ISR07_Handler_NM    - VMA_ISR_TECLADO 
    47                                  L_ISR08_Handler_DF  EQU ISR08_Handler_DF    - VMA_ISR_TECLADO   
    48                                  L_ISR10_Handler_TS  EQU ISR10_Handler_TS    - VMA_ISR_TECLADO 
    49                                  L_ISR11_Handler_NP  EQU ISR11_Handler_NP    - VMA_ISR_TECLADO 
    50                                  L_ISR12_Handler_SS  EQU ISR12_Handler_SS    - VMA_ISR_TECLADO 
    51                                  L_ISR13_Handler_GP  EQU ISR13_Handler_GP    - VMA_ISR_TECLADO 
    52                                  L_ISR14_Handler_PF  EQU ISR14_Handler_PF    - VMA_ISR_TECLADO 
    53                                  L_ISR16_Handler_MF  EQU ISR16_Handler_MF    - VMA_ISR_TECLADO 
    54                                  L_ISR17_Handler_AC  EQU ISR17_Handler_AC    - VMA_ISR_TECLADO 
    55                                  L_ISR18_Handler_MC  EQU ISR18_Handler_MC    - VMA_ISR_TECLADO 
    56                                  L_ISR19_Handler_XM  EQU ISR19_Handler_XM    - VMA_ISR_TECLADO 
    57                                  L_IRQ00_Handler     EQU IRQ00_Handler       - VMA_ISR_TECLADO
    58                                  L_IRQ01_Handler     EQU IRQ01_Handler       - VMA_ISR_TECLADO
    59                                  
    60                                  ;----------------SECTION-----------------------
    61                                  SECTION .teclado_and_ISR
    62                                  ;------------ HANDLER IRQ TIMER---------------------
    63                                  IRQ00_Handler:
    64 00000000 60                          pushad                                      ;Salvo los registros de uso general.
    65                                  
    66                                      ;xchg    bx, bx                              ; Breakpoint
    67                                      ;mov eax , [contador_timer]                  ; Si lo quiero hacer en asm... pero sin resetear variable. 
    68                                      ;inc eax
    69                                      ;mov [contador_timer], eax
    70                                      ;mov eax, 0xB8000                       ; Buffer de video pos 0 en memoria. 80 letras por fila.
    71                                      ;mov byte [eax], 'H'                    ; Le cago el caractér
    72                                      ;inc eax                                ; Incremento eax
    73                                      ;mov byte [eax], 0x07                   ; Seteo Fondo negro y letra blanca
    74                                  
    75 00000001 55                          push    ebp
    76 00000002 89E5                        mov     ebp, esp 
    77 00000004 68[00000000]                push contador_timer                         ; Contador del Timer actual              
    78 00000009 68[00000000]                push __DIGITS_TABLE                         ; Dir. de tabla de dígitos
    79 0000000E 68[00000000]                push resultado_promedio                     ; Resultado del prom. cada 500ms
    80 00000013 E8(00000000)                call contador_handler                       ; Cada 50 ticks (500ms) ejecuto la tarea 1.
    81 00000018 C9                          leave
    82                                  end_handler_timer:
    83 00000019 B020                        mov al, 0x20                                ; ACK de la IRQ para el PIC 
    84 0000001B E620                        out 0x20, al
    85 0000001D 61                          popad                                       ;Recupero registros
    86 0000001E CF                          iret                                        ;Retorno de la IRQ
    87                                  
    88                                  ;----------HANDLER IRQ TECLADO-----------------
    89                                  IRQ01_Handler:
    90 0000001F 60                          pushad                                      ; Guardo todos los registros  para asegurarme que no se rompa el estado actual.
    91 00000020 B221                        mov     dl,0x21                             ; Guardo la interrupcion en el registro DX
    92 00000022 31C0                        xor     eax, eax
    93                                      ; ->Leo el puerto
    94 00000024 E460                        in      al, PORT_A_8042                     ; Leo el puerto 0x60 (Keyboard Output Buffer Register)
    95 00000026 88C3                        mov     bl, al                              ; Copio lo leído en otro registro
    96 00000028 80E380                      and     bl, 0x80                            ; Hago un AND para obtener el bit 7 (BRK)
    97 0000002B 80FB80                      cmp     bl, 0x80                            ; Si el bit vale 0 la tecla fue presionada (Make), si es 1 se dejó de presionar (Break)
    98 0000002E 740E                        jz      end_handler_teclado                 ; Si se dejo de presionar, no la leo. Solo leo cuando se presionada (Make)
    99 00000030 68[00000000]                push    dword memoria_buffer_reservada      ; Buffer en VMA
   100 00000035 50                          push    eax                                 ; Tecla presionada.
   101 00000036 E8(00000000)                call determinar_tecla_presionada
   102 0000003B 83C408                      add     esp, 8
   103                                  end_handler_teclado:
   104                                      ;xchg    bx, bx                              ; Breakpoint
   105 0000003E B020                        mov     al, 0x20                            ; ACK de la IRQ para el PIC 
   106 00000040 E620                        out     0x20, al
   107 00000042 61                          popad                                       ; Recupero registros
   108 00000043 CF                          iret                                        ; Retorno de la IRQ
   109                                  
   110                                  ;-----------HANDLERs DE EXCEPTIONS-------------
   111                                  ;#DE (Divide Error)
   112                                  ISR00_Handler_DE:
   113 00000044 6687DB                      xchg    bx,bx
   114 00000047 B200                        mov     dl,0x00
   115 00000049 F4                          hlt
   116                                  
   117                                  ISR01_Handler_DB:
   118 0000004A B201                        mov dl,0x01
   119 0000004C F4                          hlt
   120                                  
   121                                  ISR02_Handler_NMI:
   122 0000004D B202                        mov dl,0x02
   123 0000004F F4                          hlt
   124                                  
   125                                  ISR03_Handler_BP:
   126 00000050 B203                        mov dl,0x03
   127 00000052 F4                          hlt
   128                                  
   129                                  ISR04_Handler_OF:
   130 00000053 B204                        mov dl,0x04
   131 00000055 F4                          hlt
   132                                  
   133                                  ISR05_Handler_BR:
   134 00000056 B205                        mov dl,0x05
   135 00000058 F4                          hlt
   136                                  ;#UD (Invalid Opcode Fetch) 
   137                                  ISR06_Handler_UD:
   138 00000059 6687DB                      xchg    bx,bx
   139 0000005C B206                        mov     dl,0x06
   140 0000005E F4                          hlt
   141                                  
   142                                  ISR07_Handler_NM:
   143 0000005F B207                        mov dl,0x07
   144 00000061 F4                          hlt
   145                                  
   146                                  ISR08_Handler_DF:
   147 00000062 B208                        mov dl,0x08
   148 00000064 F4                          hlt
   149                                  
   150                                  ISR10_Handler_TS:
   151 00000065 B20A                        mov dl,0x0A
   152 00000067 F4                          hlt
   153                                  
   154                                  ISR11_Handler_NP:
   155 00000068 B20B                        mov dl,0x0B
   156 0000006A F4                          hlt
   157                                  
   158                                  ISR12_Handler_SS:
   159 0000006B B20C                        mov dl,0x0C
   160 0000006D F4                          hlt
   161                                  ; Funciono al no tener el CS al retornar de un call
   162                                  ISR13_Handler_GP:
   163 0000006E B20D                        mov dl,0x0D
   164 00000070 F4                          hlt
   165 00000071 CF                          iret
   166                                  
   167                                  ISR14_Handler_PF:
   168 00000072 B20E                        mov dl,0x0E
   169 00000074 F4                          hlt
   170                                  
   171                                  ISR15_Handler_RES:
   172 00000075 B20F                        mov dl,0x0F
   173 00000077 F4                          hlt
   174                                  
   175                                  ISR16_Handler_MF:
   176 00000078 B210                        mov dl,0x10
   177 0000007A F4                          hlt
   178                                  
   179                                  ISR17_Handler_AC:
   180 0000007B B211                        mov dl,0x11
   181 0000007D F4                          hlt
   182                                  
   183                                  ISR18_Handler_MC:
   184 0000007E B212                        mov dl,0x12
   185 00000080 F4                          hlt
   186                                  
   187                                  ISR19_Handler_XM:
   188 00000081 B213                        mov dl,0x13
   189 00000083 F4                          hlt
